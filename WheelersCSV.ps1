<# Wheelers Import.

Polls Active Directory to get the following information for import into Wheelers.co

Barcode (Username), First Name, Last Name, Email Address, Year Level

--------
Todo: (Jesse)

DONE - Removed Disabled accounts from CSV

DONE - Change OU's to Variables based off year (($_.DistinguishedName -notmatch 'OU=2022 - Remove by 1/4/2023,OU=Students,OU=Accounts,DC=curric,DC=stfx ) ) <- THis should be a var so we dont have to change them

DONE (not the proper way)  - Try/Catch to check the email addresses are in a regular format (Wheelers errored out on any that had trailing spaces)

DONE - Year Level needs to be a column, Maybe seperate/if statement to take it out of distinguished name. 

DONE - Change final headings for import "Barcode,FirstName,LastName,Email,Year Level"

---------------
More in the future. Test if we can do with staff, make a csv for disabled exited students.



#>


<#
takes a 'class of' input, e.g 24 and outputs the corresponding year level, e.g 12

should be future proofed as calculations are made on the basis of the current year via Get-Date
#>
function Get-YearLevel($yearString) {
    $currentYear = Get-Date -Format "yy"     # get curr year
    $yearLevel = 0
    if ([int]$yearString -eq [int]$currentYear) {
        $yearLevel = 12                      # set year level accordingly
    }

    elseif ([int]$yearString -eq [int]$currentYear+1){
        $yearLevel = 11
    }

    elseif ([int]$yearString -eq [int]$currentYear+2){
        $yearLevel = 10
    }

    elseif ([int]$yearString -eq [int]$currentYear+3){
        $yearLevel = 9
    }
    
    elseif ([int]$yearString -eq [int]$currentYear+4){
        $yearLevel = 8
    }
    
    elseif ([int]$yearString -eq [int]$currentYear+5){
        $yearLevel = 7
    }

    return $yearLevel
}

# calculate previous year for exclusion from filter
$previousYear = (Get-Date).AddYears(-1).Year

# determine OU of previous year's accounts
$previousYearOU = Get-ADOrganizationalUnit -Filter "Name -like '$previousYear*'" -SearchBase "OU=Students, OU=Accounts, DC=curric,DC=stfx"

# join together as a single string with entire pattern for upcoming syntax
$ouString = "$($previousYearOU.DistinguishedName)|OU=SAC,OU=Students,OU=Accounts,DC=curric,DC=stfx|OU=Exam,OU=Students,OU=Accounts,DC=curric,DC=stfx"


Get-Aduser -Filter * -SearchBase "OU=Students,OU=Accounts,DC=curric,DC=stfx" |

Where-Object {$_.DistinguishedName -notmatch $ouString} |

#further filter out disabled accounts
Where-Object {$_.Enabled -eq $true} |

<#
also exporting a column for email address - tried to pull EmailAddress attribute but that was generating an empty column so I'm just piggybacking off the username to create it
doing it this way should also remove the need to compensate for email addresses with trailing spaces

Year Level column generated by passing the last 2 digits of a username through our helper function, outliers like BYOD/test accounts and repeating students will need manual removal or editing
#>
Select @{n='Barcode';e={$_.SamAccountName}}, @{n='FirstName';e={$_.GivenName}}, @{n='LastName';e={$_.Surname}}, @{n='Email';e={$_.SamAccountName + '@student.sfx.vic.edu.au'}},  @{n='Year Level';e={Get-YearLevel -yearString $_.SamAccountName.Substring($_.SamAccountName.Length-2)}} |

Export-csv C:\temp\StudentsWithEmail.csv -NoTypeInformation